#6
arr = [[1,2,3], [3,5,7], [1,6,7], [6,3,4]]
def multi(x):
    return x*2

def factorial(x):
    if x == 1:
        return 1
    return x*factorial(x-1)

def new_improved_map(func, *sequences):
    if len(DCache) > 0:
        if str(sequences) in DCache:
            return DCache[str(sequences)]
    result = []
    count = 0
    if len(sequences) > 0 and len(sequences[count]) != 0:
        try:
            while sequences[count]:
                for i in sequences[count]:
                    result.append(func(i))
                count+=1
        except IndexError:
            pass
    DCache.update({str(sequences): str(result)})
    return result
#print new_improved_map(multi, arr, [1,2], [1,3])


#7 - embedded with 6
DCache = {}
for x in range(len(arr)):
    new_improved_map(factorial, arr[x])
print(new_improved_map(factorial, arr[0]))